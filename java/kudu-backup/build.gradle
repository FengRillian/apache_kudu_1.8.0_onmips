// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

apply plugin: "scala"
apply from: "$rootDir/gradle/protobuf.gradle"
apply from: "$rootDir/gradle/shadow.gradle"

dependencies {
  compile project(path: ":kudu-client", configuration: "shadow")
  compile project(path: ":kudu-spark", configuration: "shadow")
  compile libs.protobufJava
  compile (libs.protobufJavaUtil) {
    // Make sure wrong Guava version is not pulled in.
    exclude group: "com.google.guava", module: "guava"
  }
  compile (libs.scopt)  {
    // Make sure wrong Scala version is not pulled in.
    exclude group: "org.scala-lang", module: "scala-library"
  }
  // TODO(KUDU-2500): Spark uses reflection which requires the annotations at runtime.
  compile libs.yetusAnnotations

  provided libs.scalaLibrary
  provided libs.sparkAvro
  provided libs.sparkCore
  provided libs.sparkSql
  provided libs.slf4jApi

  testCompile project(path: ":kudu-client", configuration: "shadowTest")
  testCompile project(path: ":kudu-spark", configuration: "test")
  testCompile libs.junit
  testCompile libs.log4j
  testCompile libs.scalatest
  testCompile libs.slf4jLog4j12
}

// Add protobuf files to the proto source set.
sourceSets {
  main {
    proto {
      srcDir "src/main/protobuf"
    }
  }
}

// Adjust the artifact name to match the maven build.
archivesBaseName = "kudu-backup${versions.sparkBase}_${versions.scalaBase}"

// kudu-backup has no public Javadoc.
javadoc {
  enabled = false
}

// Skip publishing kudu-backup until it's ready to be supported long-term.
uploadArchives.enabled = false